[0m18:53:48.375550 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001E5AEE301D0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001E5AEE31A30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001E5AF33C5C0>]}


============================== 18:53:48.380392 | a12c4ac9-82a0-4ac3-a19d-a4e0ef760daf ==============================
[0m18:53:48.380392 [info ] [MainThread]: Running with dbt=1.8.7
[0m18:53:48.381002 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'debug': 'False', 'log_path': 'logs', 'fail_fast': 'False', 'profiles_dir': 'C:\\Users\\JO\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt init eth_meddata_warehouse', 'static_parser': 'True', 'introspect': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m18:53:48.403473 [warn ] [MainThread]: [ConfigFolderDirectory]: Unable to parse dict {'dir': WindowsPath('C:/Users/JO/.dbt')}
[0m18:53:48.403473 [info ] [MainThread]: Creating dbt configuration folder at 
[0m18:53:48.405399 [debug] [MainThread]: Starter project path: D:\KIFYA AIM\WEEK 7\project\eth-meddata-warehouse\venv\Lib\site-packages\dbt\include\starter_project
[0m18:53:48.421971 [info ] [MainThread]: 
Your new dbt project "eth_meddata_warehouse" was created!

For more information on how to configure the profiles.yml file,
please consult the dbt documentation here:

  https://docs.getdbt.com/docs/configure-your-profile

One more thing:

Need help? Don't hesitate to reach out to us via GitHub issues or on Slack:

  https://community.getdbt.com/

Happy modeling!

[0m18:53:48.425793 [info ] [MainThread]: Setting up your profile.
[0m19:00:19.358919 [info ] [MainThread]: Profile eth_meddata_warehouse written to C:\Users\JO\.dbt\profiles.yml using target's profile_template.yml and your supplied values. Run 'dbt debug' to validate the connection.
[0m19:00:19.375254 [debug] [MainThread]: Command `dbt init` succeeded at 19:00:19.375254 after 391.16 seconds
[0m19:00:19.375254 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001E5AF7B9640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001E5AF7EAE70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001E5AF316450>]}
[0m19:00:19.375254 [debug] [MainThread]: Flushing usage events
[0m19:00:33.729545 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000234804F3EC0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000234FABF2570>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000234FFA514F0>]}


============================== 19:00:33.729545 | 957c92df-499f-4c9a-b8ce-d9c80358628c ==============================
[0m19:00:33.729545 [info ] [MainThread]: Running with dbt=1.8.7
[0m19:00:33.729545 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\JO\\.dbt', 'fail_fast': 'False', 'warn_error': 'None', 'log_path': 'logs', 'version_check': 'True', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt debug', 'introspect': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m19:00:33.748891 [info ] [MainThread]: dbt version: 1.8.7
[0m19:00:33.748891 [info ] [MainThread]: python version: 3.12.1
[0m19:00:33.748891 [info ] [MainThread]: python path: D:\KIFYA AIM\WEEK 7\project\eth-meddata-warehouse\venv\Scripts\python.exe
[0m19:00:33.748891 [info ] [MainThread]: os info: Windows-11-10.0.22631-SP0
[0m19:00:33.844603 [info ] [MainThread]: Using profiles dir at C:\Users\JO\.dbt
[0m19:00:33.844603 [info ] [MainThread]: Using profiles.yml file at C:\Users\JO\.dbt\profiles.yml
[0m19:00:33.850143 [info ] [MainThread]: Using dbt_project.yml file at D:\KIFYA AIM\WEEK 7\project\eth-meddata-warehouse\dbt_project.yml
[0m19:00:33.850143 [info ] [MainThread]: adapter type: postgres
[0m19:00:33.850143 [info ] [MainThread]: adapter version: 1.8.2
[0m19:00:33.850143 [info ] [MainThread]: Configuration:
[0m19:00:33.850143 [info ] [MainThread]:   profiles.yml file [[32mOK found and valid[0m]
[0m19:00:33.850143 [info ] [MainThread]:   dbt_project.yml file [[31mERROR not found[0m]
[0m19:00:33.850143 [info ] [MainThread]: Required dependencies:
[0m19:00:33.854782 [debug] [MainThread]: Executing "git --help"
[0m19:00:33.885782 [debug] [MainThread]: STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--config-env=<name>=<envvar>] <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m19:00:33.885782 [debug] [MainThread]: STDERR: "b''"
[0m19:00:33.885782 [info ] [MainThread]:  - git [[32mOK found[0m]

[0m19:00:33.885782 [info ] [MainThread]: Connection:
[0m19:00:33.885782 [info ] [MainThread]:   host: localhost
[0m19:00:33.885782 [info ] [MainThread]:   port: 5432
[0m19:00:33.885782 [info ] [MainThread]:   user: postgres
[0m19:00:33.885782 [info ] [MainThread]:   database: medscraper
[0m19:00:33.885782 [info ] [MainThread]:   schema: public
[0m19:00:33.885782 [info ] [MainThread]:   connect_timeout: 10
[0m19:00:33.885782 [info ] [MainThread]:   role: None
[0m19:00:33.885782 [info ] [MainThread]:   search_path: None
[0m19:00:33.894345 [info ] [MainThread]:   keepalives_idle: 0
[0m19:00:33.894345 [info ] [MainThread]:   sslmode: None
[0m19:00:33.894345 [info ] [MainThread]:   sslcert: None
[0m19:00:33.894345 [info ] [MainThread]:   sslkey: None
[0m19:00:33.894345 [info ] [MainThread]:   sslrootcert: None
[0m19:00:33.898894 [info ] [MainThread]:   application_name: dbt
[0m19:00:33.899247 [info ] [MainThread]:   retries: 1
[0m19:00:33.901032 [info ] [MainThread]: Registered adapter: postgres=1.8.2
[0m19:00:33.902238 [debug] [MainThread]: Acquiring new postgres connection 'debug'
[0m19:00:36.351553 [debug] [MainThread]: Using postgres connection "debug"
[0m19:00:36.351553 [debug] [MainThread]: On debug: select 1 as id
[0m19:00:36.351553 [debug] [MainThread]: Opening a new connection, currently in state init
[0m19:00:36.397905 [debug] [MainThread]: SQL status: SELECT 1 in 0.051 seconds
[0m19:00:36.397905 [debug] [MainThread]: On debug: Close
[0m19:00:36.397905 [info ] [MainThread]:   Connection test: [[32mOK connection ok[0m]

[0m19:00:36.413496 [info ] [MainThread]: [31m1 check failed:[0m
[0m19:00:36.413496 [info ] [MainThread]: Project loading failed for the following reason:
 project path <D:\KIFYA AIM\WEEK 7\project\eth-meddata-warehouse\dbt_project.yml> not found

[0m19:00:36.413496 [debug] [MainThread]: Command `dbt debug` failed at 19:00:36.413496 after 2.86 seconds
[0m19:00:36.413496 [debug] [MainThread]: Connection 'debug' was properly closed.
[0m19:00:36.413496 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000234FFA514F0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000023480063DA0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000023480748B90>]}
[0m19:00:36.413496 [debug] [MainThread]: Flushing usage events
